name: Generate Template & Test
on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main

jobs:
  generate:
    name: Generate Template & Test
    runs-on: ubuntu-latest
    strategy:
        matrix:
          python-version: ["3.11", "3.12", "3.13"]
          project_folder: ["caf.example", "example"]

    env:
      CAF: ${{ matrix.project_folder == 'caf.example' }}

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3
      with:
        path: 'cookiecutter-caf'

    - name: Generate Project ${{ matrix.project_folder }}
      uses: andrewthetechie/gha-cookiecutter@main
      with:
        template: 'cookiecutter-caf'
        cookiecutterValues: '{
            "caf": ${{ env.CAF }},
            "project_name": "example"
          }'

    - name: Fix Project Folder Ownership
      run: sudo chown -R $USER:$USER ${{ matrix.project_folder }}

    - name: Display Generated Project
      run: tree ${{ matrix.project_folder }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Python Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements_dev.txt
      working-directory: ${{ matrix.project_folder }}

    - name: Check Formatting with ruff
      run: ruff format --check --diff
      working-directory: ${{ matrix.project_folder }}

    - name: Lint with ruff
      run: ruff check --no-fix --ignore=N999,D400 # Errors from template syntax
      working-directory: ${{ matrix.project_folder }}

    - name: Lint with PyLint
      run: pylint src
      working-directory: ${{ matrix.project_folder }}

    - name: Lint with MyPy
      run: mypy src
      working-directory: ${{ matrix.project_folder }}

    - name: Create Dummy PKG-INFO for Versioningit
      run: |
        sudo printf "Metadata-Version: 1.1\nVersion: 0.1.0" > PKG-INFO
        cat PKG-INFO
      working-directory: ${{ matrix.project_folder }}

    - name: Check HTML Documentation Builds (sphinx)
      run: |
        pip install -r requirements.txt
        sphinx-build source build/html -b html
      working-directory: ${{ matrix.project_folder }}/docs
