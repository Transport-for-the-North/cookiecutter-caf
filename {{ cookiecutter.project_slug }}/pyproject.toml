[build-system]
requires = ["setuptools>=64.0.0", "versioningit"]
build-backend = "setuptools.build_meta"

[project]
name = "{{ cookiecutter.package_name }}"
dynamic = ["version", "dependencies", "optional-dependencies"]
description = "{{ cookiecutter.description }}"
readme = "README.md"
license = { "file" = "LICENSE" }
requires-python = ">=3.9"
authors = [{ name = "{{ cookiecutter.author }}" }]
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[project.urls]
"Bug Tracker" = "{{ cookiecutter.github_url }}/issues"
Homepage = "{{ cookiecutter.github_url }}"
Source = "{{ cookiecutter.github_url }}"

[tool.setuptools.dynamic]
dependencies = { "file" = "requirements.txt" }

[tool.setuptools.dynamic.optional-dependencies]
dev = { "file" = "requirements_dev.txt" }
docs = { "file" = "docs/requirements.txt" }

# Dynamic versioning for editable installs
[tool.setuptools.cmdclass]
build_py = "versioningit.cmdclass.build_py"
sdist = "versioningit.cmdclass.sdist"

# Packaging options
[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
"{{ cookiecutter.package_name }}" = ["py.typed"]

# Linters
[tool.black]
line-length = 95
target-version = ['py39']

[tool.pylint.messages_control]
disable = [
    "line-too-long",    # Compatibility with black
    "too-many-lines",
    "use-dict-literal",
    "use-list-literal",
]

# Pylint settings
[tool.pylint.basic]
good-names = ["df", "fn", "ca", "tp", "x", "i"]

[tool.pylint.main]
ignore = ["__init__.py", "_version.py"]

[tool.pylint.design]
max-args = 10
max-attributes = 15
max-statements = 100

[tool.mypy]
packages = ["{{ cookiecutter.package_name }}"]
namespace_packages = true
ignore_missing_imports = true
allow_redefinition = true

[tool.pydocstyle]
convention = "numpy"
match = '(?!_test)(?!test_)(?!__init__).*\.py'
add-ignore = [
    "D202", # Temporary compatibility with black
]

[tool.isort]
profile = "black"
src_paths = ["src", "tests"]

skip = ["__init__.py", "_version.py"]
skip_glob = [".*"]

# Section commenting
import_heading_stdlib = "Built-Ins"
import_heading_thirdparty = "Third Party"
import_heading_firstparty = "Local Imports"

[tool.pytest.ini_options]
pythonpath = ["src"]
addopts = "--cov=caf --cov-report=xml -n auto"

[tool.coverage.report]
include_namespace_packages = true

# Versioning
[tool.versioningit.vcs]
method = "git"
match = ["v*"]
default-tag = "0.0.1"

[tool.versioningit.onbuild]
source-file = "src/{{ cookiecutter.__pkg_folder }}/_version.py"
build-file = "{{ cookiecutter.__pkg_folder }}/_version.py"

[tool.versioningit.format]
distance = "{base_version}+{distance}.{vcs}{rev}"
dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
distance-dirty = "{base_version}+{distance}.{vcs}{rev}.dirty"
